name: ci-cd

on:
  workflow_dispatch:
  push:
    branches: [ dev ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Install OpenCover
      uses: ConorMacBride/install-package@v1.1.0
      with: 
        choco: opencover.portable

    - name: Install CodeCov
      uses: ConorMacBride/install-package@v1.1.0
      with: 
        choco: codecov

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
          8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build -c Release --no-restore /nowarn:CS1591,CS0114
      
    - name: Test
      run: dotnet test -c Release --no-build --no-restore --blame-hang --blame-hang-timeout 60s /property:GenerateFullPaths=true /consoleloggerparameters:NoSummary /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAttribute='ExcludeFromCodeCoverage' /p:Include='*' /p:SkipAutoProps=true /p:CoverletOutput='./TestResults/'

    - name: Test using OpenCover
      run: 
        OpenCover.Console.exe -register:user -target:"%xunit20%\xunit.console.x86.exe" -targetargs:".\PyrotechUtilities.Tests\bin\Debug\PyrotechUtilities.Tests.dll -noshadow" -filter:"[PyrotechUtilities.Tests*]*" -output:".\MyProject_coverage.xml"           
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: MyProject_coverage.xml
